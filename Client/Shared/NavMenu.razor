@inject ICartService CartService
@inject ISyncLocalStorageService LocalStorage
@implements IDisposable


<div class="main-header px-2">
    <div class="header-left">
        @* <a href="">Louise's Shop</a> *@
        <a href="">
            <img src="images/ShoppedeLoui.png" class="logo" alt="logo" />
            <img src="images/SL.png" class="small-logo" alt="small logo" />
        </a>
    </div>

    <div class="header-center">
        <a href="">New</a>
        |
        <a href="/women/1">Women</a>
        |
        <a href="/men/1">Men</a>
        |
        <a href="/kids/1">Kids</a>
    </div>

    <div class="header-right">
        <Search />

        @* Account *@
        <Tooltip Tip="Account">
            <a class="person-icon" data-bs-toggle="offcanvas" href="#offcanvasRight"
               role="button" aria-controls="offcanvasRight">
                @* <i class="oi oi-person"></i> *@
                <i class="fas fa-user-circle"></i>
            </a>
        </Tooltip>

        @* Account Pop-out *@
        <AccountForms />


        @* TODO: Move Cart button into it's own component *@
        @* Cart Button *@
        <div class="cart-btn">
            <Tooltip Tip="View Cart">
                <a href="/cart" class="cart-btn">
                    @* <i class="oi oi-cart"></i>  *@
                    <i class="fas fa-shopping-bag"></i>
                    @if (GetCartItemsCount() != 0)
                    {
                        <span class="badge rounded-pill bg-dark">@GetCartItemsCount()</span>
                    }
                </a>
            </Tooltip>
        </div>

        @* Menu Toggle *@
        <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasMenu" aria-controls="offcanvasMenu">
            <span><i class="oi oi-justify-right"></i></span>
        </button>

        <MenuPopout />

    </div>
</div>
<div class="disclaimer">
    <i>All items are original repurposed clothing designs and will be unavailable once sold.</i>
</div>

@code {
    private int GetCartItemsCount()
    {
        var count = LocalStorage.GetItem<int>("cartItemsCount");

        return count;
    }

    protected override void OnInitialized()
    {
        CartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
    }
}


