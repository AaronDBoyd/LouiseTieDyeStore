@page "/checkout-login"
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<div class="container">

    <header>    
        <h2>Checkout</h2>
    </header>
    <div class="login-guest-grid">
        <div class="login">
            <h5>Login</h5>
            <p>To track order history</p>
            <form>
                @* <div class="mb-3">
                    <label for="email">Email</label>
                    <input id="email" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="password">Password</label>
                    <input id="password" class="form-control" type="password" />
                </div>
                <br />
                <button type="submit" class="btn">Login and Checkout</button> *@

                <br />
                <button type="button" class="btn" @onclick="Login">Login and Checkout</button>
            </form>
        </div>
        <div class="guest">
            <h5>Continue as Guest</h5>
            <p>You can create an account after checking out.</p>
            <EditForm Model="guestEmail" OnValidSubmit="CheckoutAsGuest">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="email">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="@guestEmail.Email" />
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" checked>
                    <label class="form-check-label" for="flexCheckChecked">
                        Subscribe to promotional emails
                    </label>
                </div>
                <br />
                <button type="submit" class="btn guest-btn">Checkout as Guest</button>
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
</div>

@code {
    GuestEmail guestEmail { get; set; } = new();

    private async Task Login()
    {
        var returnUrl = "shipping";

        await LocalStorage.SetItemAsync("returnUrl", returnUrl);

        Navigation.NavigateTo("authentication/login");
    }

    private async Task CheckoutAsGuest()
    {
        Console.WriteLine("guestEmail: " + guestEmail.Email);

        // TODO: When should I remove guestCheckoutEmail from localStorage??

        // Collect Email for order
        await LocalStorage.SetItemAsync("guestCheckoutEmail", guestEmail.Email);

        // Collect Subscribed value


        Navigation.NavigateTo("/shipping");
    }
}
