// <auto-generated />
using System;
using LouiseTieDyeStore.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LouiseTieDyeStore.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240412072500_Postgres_Init")]
    partial class Postgres_Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.Property<string>("LineOne")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_one");

                    b.Property<string>("LineTwo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("line_two");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("state");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("zip");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasDatabaseName("ix_addresses_order_id");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.CartItem", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("text")
                        .HasColumnName("user_email");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("UserEmail", "ProductId")
                        .HasName("pk_cart_items");

                    b.ToTable("cart_items");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Women",
                            Url = "women"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Men",
                            Url = "men"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kids",
                            Url = "kids"
                        });
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Url = "https://i.imgur.com/1DnQj7V.jpg"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 1,
                            Url = "https://i.imgur.com/tGJkEL9.jpg"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 2,
                            Url = "https://i.imgur.com/zw3Olrp.jpg"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 2,
                            Url = "https://i.imgur.com/9uEVXR1.png"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 3,
                            Url = "https://i.imgur.com/uHKlJtV.jpg"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 3,
                            Url = "https://i.imgur.com/MD7Wzx4.jpg"
                        });
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean")
                        .HasColumnName("read");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("subject");

                    b.HasKey("Id")
                        .HasName("pk_messages");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<decimal>("SalesTax")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("sales_tax");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("shipping_cost");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("sub_total");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("total_price");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("price");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("pk_order_items");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.ToTable("order_items");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("deleted");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("original_price");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("product_type_id");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("size");

                    b.Property<bool>("Sold")
                        .HasColumnType("boolean")
                        .HasColumnName("sold");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean")
                        .HasColumnName("visible");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.HasIndex("ProductTypeId")
                        .HasDatabaseName("ix_products_product_type_id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Deleted = false,
                            Description = "Blue and Yellow pattern on a womens ScoobyDoo t-shirt",
                            OriginalPrice = 35.00m,
                            Price = 30.00m,
                            ProductTypeId = 1,
                            Size = "XL",
                            Sold = false,
                            Title = "Cool TyeDye Shirt",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Deleted = false,
                            Description = "Blue and Yellow pattern on a Long Sleeve Shirt",
                            OriginalPrice = 25.00m,
                            Price = 20.00m,
                            ProductTypeId = 2,
                            Size = "S",
                            Sold = false,
                            Title = "Really Cool TyeDye Shirt",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Deleted = false,
                            Description = "Blue and Red spiral pattern on a baby onesie.",
                            OriginalPrice = 15.00m,
                            Price = 10.00m,
                            ProductTypeId = 3,
                            Size = "M",
                            Sold = false,
                            Title = "TyeDye Onesie",
                            Visible = true
                        });
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_product_types");

                    b.ToTable("product_types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "T-Shirt"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Long Sleeve Shirt"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Onesie"
                        });
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.TaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abbreviation");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("rate");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("pk_tax_rates");

                    b.ToTable("tax_rates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "AL",
                            Rate = 4.000m,
                            State = "Alabama"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "AK",
                            Rate = 0.000m,
                            State = "Alaska"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "AZ",
                            Rate = 5.600m,
                            State = "Arizona"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "AR",
                            Rate = 6.500m,
                            State = "Arkansas"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "CA",
                            Rate = 7.250m,
                            State = "California"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "CO",
                            Rate = 2.900m,
                            State = "Colorado"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "CT",
                            Rate = 6.350m,
                            State = "Connecticut"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "DE",
                            Rate = 0.000m,
                            State = "Delaware"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "FL",
                            Rate = 6.000m,
                            State = "Florida"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "GA",
                            Rate = 4.000m,
                            State = "Georgia"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "HI",
                            Rate = 4.000m,
                            State = "Hawaii"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "ID",
                            Rate = 6.000m,
                            State = "Idaho"
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "IL",
                            Rate = 6.250m,
                            State = "Illinois"
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "IN",
                            Rate = 7.000m,
                            State = "Indiana"
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "IA",
                            Rate = 6.000m,
                            State = "Iowa"
                        },
                        new
                        {
                            Id = 16,
                            Abbreviation = "KS",
                            Rate = 6.500m,
                            State = "Kansas"
                        },
                        new
                        {
                            Id = 17,
                            Abbreviation = "KY",
                            Rate = 6.000m,
                            State = "Kentucky"
                        },
                        new
                        {
                            Id = 18,
                            Abbreviation = "LA",
                            Rate = 4.450m,
                            State = "Louisiana"
                        },
                        new
                        {
                            Id = 19,
                            Abbreviation = "ME",
                            Rate = 5.500m,
                            State = "Maine"
                        },
                        new
                        {
                            Id = 20,
                            Abbreviation = "MD",
                            Rate = 6.000m,
                            State = "Maryland"
                        },
                        new
                        {
                            Id = 21,
                            Abbreviation = "MA",
                            Rate = 6.250m,
                            State = "Massachusetts"
                        },
                        new
                        {
                            Id = 22,
                            Abbreviation = "MI",
                            Rate = 6.000m,
                            State = "Michigan"
                        },
                        new
                        {
                            Id = 23,
                            Abbreviation = "MN",
                            Rate = 6.875m,
                            State = "Minnesota"
                        },
                        new
                        {
                            Id = 24,
                            Abbreviation = "MS",
                            Rate = 7.000m,
                            State = "Mississippi"
                        },
                        new
                        {
                            Id = 25,
                            Abbreviation = "MO",
                            Rate = 4.225m,
                            State = "Missouri"
                        },
                        new
                        {
                            Id = 26,
                            Abbreviation = "MT",
                            Rate = 0.000m,
                            State = "Montana"
                        },
                        new
                        {
                            Id = 27,
                            Abbreviation = "NE",
                            Rate = 5.500m,
                            State = "Nebraska"
                        },
                        new
                        {
                            Id = 28,
                            Abbreviation = "NV",
                            Rate = 6.850m,
                            State = "Nevada"
                        },
                        new
                        {
                            Id = 29,
                            Abbreviation = "NH",
                            Rate = 0.000m,
                            State = "New Hampshire"
                        },
                        new
                        {
                            Id = 30,
                            Abbreviation = "NJ",
                            Rate = 6.625m,
                            State = "New Jersey"
                        },
                        new
                        {
                            Id = 31,
                            Abbreviation = "MN",
                            Rate = 4.875m,
                            State = "New Mexico"
                        },
                        new
                        {
                            Id = 32,
                            Abbreviation = "NY",
                            Rate = 4.000m,
                            State = "New York"
                        },
                        new
                        {
                            Id = 33,
                            Abbreviation = "NC",
                            Rate = 4.750m,
                            State = "North Carolina"
                        },
                        new
                        {
                            Id = 34,
                            Abbreviation = "ND",
                            Rate = 5.000m,
                            State = "North Dakota"
                        },
                        new
                        {
                            Id = 35,
                            Abbreviation = "OH",
                            Rate = 5.750m,
                            State = "Ohio"
                        },
                        new
                        {
                            Id = 36,
                            Abbreviation = "OK",
                            Rate = 4.500m,
                            State = "Oklahoma"
                        },
                        new
                        {
                            Id = 37,
                            Abbreviation = "OR",
                            Rate = 0.000m,
                            State = "Oregon"
                        },
                        new
                        {
                            Id = 38,
                            Abbreviation = "PA",
                            Rate = 6.000m,
                            State = "Pennsylvania"
                        },
                        new
                        {
                            Id = 39,
                            Abbreviation = "RI",
                            Rate = 7.000m,
                            State = "Rhode Island"
                        },
                        new
                        {
                            Id = 40,
                            Abbreviation = "SC",
                            Rate = 6.000m,
                            State = "South Carolina"
                        },
                        new
                        {
                            Id = 41,
                            Abbreviation = "SD",
                            Rate = 4.200m,
                            State = "South Dakota"
                        },
                        new
                        {
                            Id = 42,
                            Abbreviation = "TN",
                            Rate = 7.000m,
                            State = "Tennessee"
                        },
                        new
                        {
                            Id = 43,
                            Abbreviation = "TX",
                            Rate = 6.250m,
                            State = "Texas"
                        },
                        new
                        {
                            Id = 44,
                            Abbreviation = "UT",
                            Rate = 6.100m,
                            State = "Utah"
                        },
                        new
                        {
                            Id = 45,
                            Abbreviation = "VT",
                            Rate = 6.000m,
                            State = "Vermont"
                        },
                        new
                        {
                            Id = 46,
                            Abbreviation = "VA",
                            Rate = 5.300m,
                            State = "Virginia"
                        },
                        new
                        {
                            Id = 47,
                            Abbreviation = "WA",
                            Rate = 6.500m,
                            State = "Washington"
                        },
                        new
                        {
                            Id = 48,
                            Abbreviation = "WV",
                            Rate = 6.000m,
                            State = "West Virginia"
                        },
                        new
                        {
                            Id = 49,
                            Abbreviation = "WI",
                            Rate = 5.000m,
                            State = "Wisconsin"
                        },
                        new
                        {
                            Id = 50,
                            Abbreviation = "WY",
                            Rate = 4.000m,
                            State = "Wyoming"
                        },
                        new
                        {
                            Id = 51,
                            Abbreviation = "DC",
                            Rate = 6.000m,
                            State = "District of Columbia"
                        });
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Address", b =>
                {
                    b.HasOne("LouiseTieDyeStore.Shared.Order", null)
                        .WithOne("Address")
                        .HasForeignKey("LouiseTieDyeStore.Shared.Address", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_orders_order_id");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Image", b =>
                {
                    b.HasOne("LouiseTieDyeStore.Shared.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.OrderItem", b =>
                {
                    b.HasOne("LouiseTieDyeStore.Shared.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("LouiseTieDyeStore.Shared.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Product", b =>
                {
                    b.HasOne("LouiseTieDyeStore.Shared.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.HasOne("LouiseTieDyeStore.Shared.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_product_types_product_type_id");

                    b.Navigation("Category");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Order", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("LouiseTieDyeStore.Shared.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
